#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDiemSinhVien")]
	public partial class dataQLDSVDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertBoMon(BoMon instance);
    partial void UpdateBoMon(BoMon instance);
    partial void DeleteBoMon(BoMon instance);
    partial void InsertDiemSV(DiemSV instance);
    partial void UpdateDiemSV(DiemSV instance);
    partial void DeleteDiemSV(DiemSV instance);
    partial void InsertDiemTBHocKi(DiemTBHocKi instance);
    partial void UpdateDiemTBHocKi(DiemTBHocKi instance);
    partial void DeleteDiemTBHocKi(DiemTBHocKi instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertHocKi(HocKi instance);
    partial void UpdateHocKi(HocKi instance);
    partial void DeleteHocKi(HocKi instance);
    partial void InsertDiemTBNam(DiemTBNam instance);
    partial void UpdateDiemTBNam(DiemTBNam instance);
    partial void DeleteDiemTBNam(DiemTBNam instance);
    partial void InsertTaiKhoang(TaiKhoang instance);
    partial void UpdateTaiKhoang(TaiKhoang instance);
    partial void DeleteTaiKhoang(TaiKhoang instance);
    #endregion
		
		public dataQLDSVDataContext() : 
				base(global::DTO.Properties.Settings.Default.QLDiemSinhVienConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dataQLDSVDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataQLDSVDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataQLDSVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataQLDSVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<BoMon> BoMons
		{
			get
			{
				return this.GetTable<BoMon>();
			}
		}
		
		public System.Data.Linq.Table<DiemSV> DiemSVs
		{
			get
			{
				return this.GetTable<DiemSV>();
			}
		}
		
		public System.Data.Linq.Table<DiemTBHocKi> DiemTBHocKis
		{
			get
			{
				return this.GetTable<DiemTBHocKi>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<HocKi> HocKis
		{
			get
			{
				return this.GetTable<HocKi>();
			}
		}
		
		public System.Data.Linq.Table<DiemTBNam> DiemTBNams
		{
			get
			{
				return this.GetTable<DiemTBNam>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoang> TaiKhoangs
		{
			get
			{
				return this.GetTable<TaiKhoang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSV;
		
		private string _HoTen;
		
		private System.Nullable<bool> _GioiTinh;
		
		private string _Lop;
		
		private System.Nullable<System.DateTime> _NamSinh;
		
		private string _QueQuan;
		
		private EntitySet<DiemSV> _DiemSVs;
		
		private EntitySet<DiemTBHocKi> _DiemTBHocKis;
		
		private EntitySet<DiemTBNam> _DiemTBNams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSVChanging(int value);
    partial void OnMaSVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    partial void OnNamSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNamSinhChanged();
    partial void OnQueQuanChanging(string value);
    partial void OnQueQuanChanged();
    #endregion
		
		public SinhVien()
		{
			this._DiemSVs = new EntitySet<DiemSV>(new Action<DiemSV>(this.attach_DiemSVs), new Action<DiemSV>(this.detach_DiemSVs));
			this._DiemTBHocKis = new EntitySet<DiemTBHocKi>(new Action<DiemTBHocKi>(this.attach_DiemTBHocKis), new Action<DiemTBHocKi>(this.detach_DiemTBHocKis));
			this._DiemTBNams = new EntitySet<DiemTBNam>(new Action<DiemTBNam>(this.attach_DiemTBNams), new Action<DiemTBNam>(this.detach_DiemTBNams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="VarChar(50)")]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinh", DbType="Date")]
		public System.Nullable<System.DateTime> NamSinh
		{
			get
			{
				return this._NamSinh;
			}
			set
			{
				if ((this._NamSinh != value))
				{
					this.OnNamSinhChanging(value);
					this.SendPropertyChanging();
					this._NamSinh = value;
					this.SendPropertyChanged("NamSinh");
					this.OnNamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuan", DbType="NVarChar(50)")]
		public string QueQuan
		{
			get
			{
				return this._QueQuan;
			}
			set
			{
				if ((this._QueQuan != value))
				{
					this.OnQueQuanChanging(value);
					this.SendPropertyChanging();
					this._QueQuan = value;
					this.SendPropertyChanged("QueQuan");
					this.OnQueQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemSV", Storage="_DiemSVs", ThisKey="MaSV", OtherKey="MaSV")]
		public EntitySet<DiemSV> DiemSVs
		{
			get
			{
				return this._DiemSVs;
			}
			set
			{
				this._DiemSVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemTBHocKi", Storage="_DiemTBHocKis", ThisKey="MaSV", OtherKey="MaSV")]
		public EntitySet<DiemTBHocKi> DiemTBHocKis
		{
			get
			{
				return this._DiemTBHocKis;
			}
			set
			{
				this._DiemTBHocKis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemTBNam", Storage="_DiemTBNams", ThisKey="MaSV", OtherKey="MaSV")]
		public EntitySet<DiemTBNam> DiemTBNams
		{
			get
			{
				return this._DiemTBNams;
			}
			set
			{
				this._DiemTBNams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiemSVs(DiemSV entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_DiemSVs(DiemSV entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_DiemTBHocKis(DiemTBHocKi entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_DiemTBHocKis(DiemTBHocKi entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_DiemTBNams(DiemTBNam entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_DiemTBNams(DiemTBNam entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BoMon")]
	public partial class BoMon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBM;
		
		private string _TenBM;
		
		private EntitySet<DiemSV> _DiemSVs;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBMChanging(string value);
    partial void OnMaBMChanged();
    partial void OnTenBMChanging(string value);
    partial void OnTenBMChanged();
    #endregion
		
		public BoMon()
		{
			this._DiemSVs = new EntitySet<DiemSV>(new Action<DiemSV>(this.attach_DiemSVs), new Action<DiemSV>(this.detach_DiemSVs));
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBM", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBM
		{
			get
			{
				return this._MaBM;
			}
			set
			{
				if ((this._MaBM != value))
				{
					this.OnMaBMChanging(value);
					this.SendPropertyChanging();
					this._MaBM = value;
					this.SendPropertyChanged("MaBM");
					this.OnMaBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBM", DbType="NVarChar(50)")]
		public string TenBM
		{
			get
			{
				return this._TenBM;
			}
			set
			{
				if ((this._TenBM != value))
				{
					this.OnTenBMChanging(value);
					this.SendPropertyChanging();
					this._TenBM = value;
					this.SendPropertyChanged("TenBM");
					this.OnTenBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_DiemSV", Storage="_DiemSVs", ThisKey="MaBM", OtherKey="MaBM")]
		public EntitySet<DiemSV> DiemSVs
		{
			get
			{
				return this._DiemSVs;
			}
			set
			{
				this._DiemSVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_GiaoVien", Storage="_GiaoViens", ThisKey="MaBM", OtherKey="MaBM")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiemSVs(DiemSV entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = this;
		}
		
		private void detach_DiemSVs(DiemSV entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = null;
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiemSV")]
	public partial class DiemSV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MaSV;
		
		private string _MaHK;
		
		private string _MaBM;
		
		private string _MaGV;
		
		private System.Nullable<double> _DiemCC;
		
		private System.Nullable<double> _DiemGK;
		
		private System.Nullable<double> _DiemCK;
		
		private System.Nullable<double> _DiemTBMon;
		
		private EntityRef<BoMon> _BoMon;
		
		private EntityRef<SinhVien> _SinhVien;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<HocKi> _HocKi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaSVChanging(System.Nullable<int> value);
    partial void OnMaSVChanged();
    partial void OnMaHKChanging(string value);
    partial void OnMaHKChanged();
    partial void OnMaBMChanging(string value);
    partial void OnMaBMChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnDiemCCChanging(System.Nullable<double> value);
    partial void OnDiemCCChanged();
    partial void OnDiemGKChanging(System.Nullable<double> value);
    partial void OnDiemGKChanged();
    partial void OnDiemCKChanging(System.Nullable<double> value);
    partial void OnDiemCKChanged();
    partial void OnDiemTBMonChanging(System.Nullable<double> value);
    partial void OnDiemTBMonChanged();
    #endregion
		
		public DiemSV()
		{
			this._BoMon = default(EntityRef<BoMon>);
			this._SinhVien = default(EntityRef<SinhVien>);
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._HocKi = default(EntityRef<HocKi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="Int")]
		public System.Nullable<int> MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="VarChar(10)")]
		public string MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					if (this._HocKi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBM", DbType="VarChar(10)")]
		public string MaBM
		{
			get
			{
				return this._MaBM;
			}
			set
			{
				if ((this._MaBM != value))
				{
					if (this._BoMon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBMChanging(value);
					this.SendPropertyChanging();
					this._MaBM = value;
					this.SendPropertyChanged("MaBM");
					this.OnMaBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="VarChar(10)")]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemCC", DbType="Float")]
		public System.Nullable<double> DiemCC
		{
			get
			{
				return this._DiemCC;
			}
			set
			{
				if ((this._DiemCC != value))
				{
					this.OnDiemCCChanging(value);
					this.SendPropertyChanging();
					this._DiemCC = value;
					this.SendPropertyChanged("DiemCC");
					this.OnDiemCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemGK", DbType="Float")]
		public System.Nullable<double> DiemGK
		{
			get
			{
				return this._DiemGK;
			}
			set
			{
				if ((this._DiemGK != value))
				{
					this.OnDiemGKChanging(value);
					this.SendPropertyChanging();
					this._DiemGK = value;
					this.SendPropertyChanged("DiemGK");
					this.OnDiemGKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemCK", DbType="Float")]
		public System.Nullable<double> DiemCK
		{
			get
			{
				return this._DiemCK;
			}
			set
			{
				if ((this._DiemCK != value))
				{
					this.OnDiemCKChanging(value);
					this.SendPropertyChanging();
					this._DiemCK = value;
					this.SendPropertyChanged("DiemCK");
					this.OnDiemCKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTBMon", DbType="Float")]
		public System.Nullable<double> DiemTBMon
		{
			get
			{
				return this._DiemTBMon;
			}
			set
			{
				if ((this._DiemTBMon != value))
				{
					this.OnDiemTBMonChanging(value);
					this.SendPropertyChanging();
					this._DiemTBMon = value;
					this.SendPropertyChanged("DiemTBMon");
					this.OnDiemTBMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_DiemSV", Storage="_BoMon", ThisKey="MaBM", OtherKey="MaBM", IsForeignKey=true)]
		public BoMon BoMon
		{
			get
			{
				return this._BoMon.Entity;
			}
			set
			{
				BoMon previousValue = this._BoMon.Entity;
				if (((previousValue != value) 
							|| (this._BoMon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BoMon.Entity = null;
						previousValue.DiemSVs.Remove(this);
					}
					this._BoMon.Entity = value;
					if ((value != null))
					{
						value.DiemSVs.Add(this);
						this._MaBM = value.MaBM;
					}
					else
					{
						this._MaBM = default(string);
					}
					this.SendPropertyChanged("BoMon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemSV", Storage="_SinhVien", ThisKey="MaSV", OtherKey="MaSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.DiemSVs.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.DiemSVs.Add(this);
						this._MaSV = value.MaSV;
					}
					else
					{
						this._MaSV = default(Nullable<int>);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_DiemSV", Storage="_GiaoVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.DiemSVs.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.DiemSVs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKi_DiemSV", Storage="_HocKi", ThisKey="MaHK", OtherKey="MaHK", IsForeignKey=true)]
		public HocKi HocKi
		{
			get
			{
				return this._HocKi.Entity;
			}
			set
			{
				HocKi previousValue = this._HocKi.Entity;
				if (((previousValue != value) 
							|| (this._HocKi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKi.Entity = null;
						previousValue.DiemSVs.Remove(this);
					}
					this._HocKi.Entity = value;
					if ((value != null))
					{
						value.DiemSVs.Add(this);
						this._MaHK = value.MaHK;
					}
					else
					{
						this._MaHK = default(string);
					}
					this.SendPropertyChanged("HocKi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiemTBHocKi")]
	public partial class DiemTBHocKi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MaSV;
		
		private string _MaHK;
		
		private System.Nullable<double> _DiemTB;
		
		private EntityRef<SinhVien> _SinhVien;
		
		private EntityRef<HocKi> _HocKi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaSVChanging(System.Nullable<int> value);
    partial void OnMaSVChanged();
    partial void OnMaHKChanging(string value);
    partial void OnMaHKChanged();
    partial void OnDiemTBChanging(System.Nullable<double> value);
    partial void OnDiemTBChanged();
    #endregion
		
		public DiemTBHocKi()
		{
			this._SinhVien = default(EntityRef<SinhVien>);
			this._HocKi = default(EntityRef<HocKi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="Int")]
		public System.Nullable<int> MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="VarChar(10)")]
		public string MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					if (this._HocKi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTB", DbType="Float")]
		public System.Nullable<double> DiemTB
		{
			get
			{
				return this._DiemTB;
			}
			set
			{
				if ((this._DiemTB != value))
				{
					this.OnDiemTBChanging(value);
					this.SendPropertyChanging();
					this._DiemTB = value;
					this.SendPropertyChanged("DiemTB");
					this.OnDiemTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemTBHocKi", Storage="_SinhVien", ThisKey="MaSV", OtherKey="MaSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.DiemTBHocKis.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.DiemTBHocKis.Add(this);
						this._MaSV = value.MaSV;
					}
					else
					{
						this._MaSV = default(Nullable<int>);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKi_DiemTBHocKi", Storage="_HocKi", ThisKey="MaHK", OtherKey="MaHK", IsForeignKey=true)]
		public HocKi HocKi
		{
			get
			{
				return this._HocKi.Entity;
			}
			set
			{
				HocKi previousValue = this._HocKi.Entity;
				if (((previousValue != value) 
							|| (this._HocKi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKi.Entity = null;
						previousValue.DiemTBHocKis.Remove(this);
					}
					this._HocKi.Entity = value;
					if ((value != null))
					{
						value.DiemTBHocKis.Add(this);
						this._MaHK = value.MaHK;
					}
					else
					{
						this._MaHK = default(string);
					}
					this.SendPropertyChanged("HocKi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _MaBM;
		
		private string _HoTen;
		
		private System.Nullable<bool> _GioiTinh;
		
		private System.Nullable<System.DateTime> _NamSinh;
		
		private string _QueQuan;
		
		private EntitySet<DiemSV> _DiemSVs;
		
		private EntityRef<BoMon> _BoMon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnMaBMChanging(string value);
    partial void OnMaBMChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnNamSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNamSinhChanged();
    partial void OnQueQuanChanging(string value);
    partial void OnQueQuanChanged();
    #endregion
		
		public GiaoVien()
		{
			this._DiemSVs = new EntitySet<DiemSV>(new Action<DiemSV>(this.attach_DiemSVs), new Action<DiemSV>(this.detach_DiemSVs));
			this._BoMon = default(EntityRef<BoMon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBM", DbType="VarChar(10)")]
		public string MaBM
		{
			get
			{
				return this._MaBM;
			}
			set
			{
				if ((this._MaBM != value))
				{
					if (this._BoMon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBMChanging(value);
					this.SendPropertyChanging();
					this._MaBM = value;
					this.SendPropertyChanged("MaBM");
					this.OnMaBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinh", DbType="Date")]
		public System.Nullable<System.DateTime> NamSinh
		{
			get
			{
				return this._NamSinh;
			}
			set
			{
				if ((this._NamSinh != value))
				{
					this.OnNamSinhChanging(value);
					this.SendPropertyChanging();
					this._NamSinh = value;
					this.SendPropertyChanged("NamSinh");
					this.OnNamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuan", DbType="NVarChar(50)")]
		public string QueQuan
		{
			get
			{
				return this._QueQuan;
			}
			set
			{
				if ((this._QueQuan != value))
				{
					this.OnQueQuanChanging(value);
					this.SendPropertyChanging();
					this._QueQuan = value;
					this.SendPropertyChanged("QueQuan");
					this.OnQueQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_DiemSV", Storage="_DiemSVs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<DiemSV> DiemSVs
		{
			get
			{
				return this._DiemSVs;
			}
			set
			{
				this._DiemSVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_GiaoVien", Storage="_BoMon", ThisKey="MaBM", OtherKey="MaBM", IsForeignKey=true)]
		public BoMon BoMon
		{
			get
			{
				return this._BoMon.Entity;
			}
			set
			{
				BoMon previousValue = this._BoMon.Entity;
				if (((previousValue != value) 
							|| (this._BoMon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BoMon.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._BoMon.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._MaBM = value.MaBM;
					}
					else
					{
						this._MaBM = default(string);
					}
					this.SendPropertyChanged("BoMon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiemSVs(DiemSV entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_DiemSVs(DiemSV entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocKi")]
	public partial class HocKi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHK;
		
		private string _TenHK;
		
		private EntitySet<DiemSV> _DiemSVs;
		
		private EntitySet<DiemTBHocKi> _DiemTBHocKis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHKChanging(string value);
    partial void OnMaHKChanged();
    partial void OnTenHKChanging(string value);
    partial void OnTenHKChanged();
    #endregion
		
		public HocKi()
		{
			this._DiemSVs = new EntitySet<DiemSV>(new Action<DiemSV>(this.attach_DiemSVs), new Action<DiemSV>(this.detach_DiemSVs));
			this._DiemTBHocKis = new EntitySet<DiemTBHocKi>(new Action<DiemTBHocKi>(this.attach_DiemTBHocKis), new Action<DiemTBHocKi>(this.detach_DiemTBHocKis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHK", DbType="NVarChar(30)")]
		public string TenHK
		{
			get
			{
				return this._TenHK;
			}
			set
			{
				if ((this._TenHK != value))
				{
					this.OnTenHKChanging(value);
					this.SendPropertyChanging();
					this._TenHK = value;
					this.SendPropertyChanged("TenHK");
					this.OnTenHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKi_DiemSV", Storage="_DiemSVs", ThisKey="MaHK", OtherKey="MaHK")]
		public EntitySet<DiemSV> DiemSVs
		{
			get
			{
				return this._DiemSVs;
			}
			set
			{
				this._DiemSVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKi_DiemTBHocKi", Storage="_DiemTBHocKis", ThisKey="MaHK", OtherKey="MaHK")]
		public EntitySet<DiemTBHocKi> DiemTBHocKis
		{
			get
			{
				return this._DiemTBHocKis;
			}
			set
			{
				this._DiemTBHocKis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiemSVs(DiemSV entity)
		{
			this.SendPropertyChanging();
			entity.HocKi = this;
		}
		
		private void detach_DiemSVs(DiemSV entity)
		{
			this.SendPropertyChanging();
			entity.HocKi = null;
		}
		
		private void attach_DiemTBHocKis(DiemTBHocKi entity)
		{
			this.SendPropertyChanging();
			entity.HocKi = this;
		}
		
		private void detach_DiemTBHocKis(DiemTBHocKi entity)
		{
			this.SendPropertyChanging();
			entity.HocKi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiemTBNam")]
	public partial class DiemTBNam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MaSV;
		
		private System.Nullable<double> _DiemTB;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaSVChanging(int value);
    partial void OnMaSVChanged();
    partial void OnDiemTBChanging(System.Nullable<double> value);
    partial void OnDiemTBChanged();
    #endregion
		
		public DiemTBNam()
		{
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="Int NOT NULL")]
		public int MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTB", DbType="Float")]
		public System.Nullable<double> DiemTB
		{
			get
			{
				return this._DiemTB;
			}
			set
			{
				if ((this._DiemTB != value))
				{
					this.OnDiemTBChanging(value);
					this.SendPropertyChanging();
					this._DiemTB = value;
					this.SendPropertyChanged("DiemTB");
					this.OnDiemTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemTBNam", Storage="_SinhVien", ThisKey="MaSV", OtherKey="MaSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.DiemTBNams.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.DiemTBNams.Add(this);
						this._MaSV = value.MaSV;
					}
					else
					{
						this._MaSV = default(int);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoang")]
	public partial class TaiKhoang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDN;
		
		private string _MatKhau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public TaiKhoang()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
